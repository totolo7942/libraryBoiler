plugins {
    id 'java'
    id 'org.graalvm.buildtools.native' version "0.9.8"
    id 'idea'
    id 'me.champeau.jmh' version '0.6.6'
    id 'application'
}

apply plugin: 'java'
apply plugin: 'idea'


group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    gradlePluginPortal()
}

//gradle 7.3 source
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

test {
    testLogging.showStandardStreams = true
    javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(11)
    }
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jmh {
    duplicateClassesStrategy = DuplicatesStrategy.WARN
}

configurations.all {
    resolutionStrategy {
        cacheChangingModulesFor 0, 'seconds'
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'utils.big.LargeXmlNaverEpReaderMain'
        )
    }
}

dependencies {

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
    implementation 'org.slf4j:slf4j-simple:1.7.30'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'


    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

    //jaxb
    implementation 'com.sun.xml.bind:jaxb-core:2.3.0'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.0'
    implementation 'org.eclipse.persistence:org.eclipse.persistence.moxy:3.0.0'
    implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '3.0.1'

    implementation 'com.sun.xml.bind:jaxb-impl:3.0.1'

    //legacy
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.0'
    implementation group: 'com.jamesmurty.utils', name: 'java-xmlbuilder', version: '1.3'

    //json
    implementation 'com.google.code.gson:gson:2.8.9'

    // import BOM
    implementation platform('io.projectreactor:reactor-bom:2020.0.14')
    // add dependencies without a version number
//    implementation 'io.projectreactor:reactor-core'
    implementation 'io.reactivex.rxjava3:rxjava:3.0.7'

    //JMH Dependencies
    implementation 'org.openjdk.jmh:jmh-core-benchmarks:1.34'
    implementation 'org.openjdk.jmh:jmh-core:1.34'
    implementation 'org.openjdk.jmh:jmh-generator-annprocess:1.34'
    testImplementation 'org.openjdk.jmh:jmh-core:1.34'
    testImplementation 'org.openjdk.jmh:jmh-generator-bytecode:1.34'
}
//JMH 개별처리 한다.
jmh {
    fork = 1
    warmupIterations = 1
    iterations = 1
}

tasks.withType(org.graalvm.buildtools.gradle.tasks.BuildNativeImageTask).configureEach {
    disableToolchainDetection = true
}

graalvmNative {
    testSupport.set(false)
    binaries {
        main {
            javaLauncher = javaToolchains.launcherFor {
                languageVersion = JavaLanguageVersion.of(17)
            }

            // Main options
            imageName = 'ReactiveXmlEpReaderMain' // The name of the native image, defaults to the project name
            mainClass = 'utils.big.ReactiveXmlEpReaderMain' // The main class to use, defaults to the application.mainClass
            debug = true // Determines if debug info should be generated, defaults to false
            verbose = true // Add verbose output, defaults to false
            fallback = true // Sets the fallback mode of native-image, defaults to false
            sharedLibrary = false // Determines if image is a shared library, defaults to false if `java-library` plugin isn't included

//            systemProperties = [GRAALVM_HOME: '/Users/a1101381/Develop/server/graalvm-ce-java17-21.3.0/Contents/Home'] // Sets the system properties to use for the native image builder
            // Advanced options
            //buildArgs.add('-H:Extra') // Passes '-H:Extra' to the native image builder options. This can be used to pass parameters which are not directly supported by this extension
//            jvmArgs.add('-cp  ')

            // Runtime options
//            runtimeArgs.add('--help') // Passes '--help' to built image, during "nativeRun" task

            // Development options
            agent {
                enabled = true // Enables the reflection agent. Can be also set on command line using '-Pagent'
            }

            useFatJar = true // Instead of passing each jar individually, builds a fat jar
        }
    }
}

nativeBuild {
    imageName = "ReactiveXmlEpReaderMain"
    mainClass = "utils.big.ReactiveXmlEpReaderMain"
    verbose = true
    fallback = false
}

test {
    useJUnitPlatform()
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }

    reports {
        junitXml.enabled = false
        html.enabled = true
    }
}