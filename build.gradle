plugins {
    id 'java'
    id 'org.graalvm.buildtools.native' version "0.9.8"
    id 'idea'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    gradlePluginPortal()
}


sourceCompatibility=JavaVersion.VERSION_17
targetCompatibility=JavaVersion.VERSION_17


dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'

    //lombok
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

    //jaxb
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    implementation group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0.1'
    implementation group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.1'

    //legacy
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.0'
    implementation group: 'com.jamesmurty.utils', name: 'java-xmlbuilder', version: '1.3'


    //json
    implementation 'com.google.code.gson:gson:2.8.9'
}

tasks.withType(org.graalvm.buildtools.gradle.tasks.BuildNativeImageTask).configureEach {
    disableToolchainDetection = true
}

graalvmNative {
    testSupport.set(false)
    binaries {
        main {
            javaLauncher = javaToolchains.launcherFor {
                languageVersion = JavaLanguageVersion.of(17)
            }

            // Main options
            imageName = 'LargeXmlNaverEpReaderMain' // The name of the native image, defaults to the project name
            mainClass = 'utils.big.LargeXmlNaverEpReaderMain' // The main class to use, defaults to the application.mainClass
            debug = false // Determines if debug info should be generated, defaults to false
            verbose = true // Add verbose output, defaults to false
            fallback = false // Sets the fallback mode of native-image, defaults to false
            sharedLibrary = false // Determines if image is a shared library, defaults to false if `java-library` plugin isn't included

//            systemProperties = [GRAALVM_HOME: '/Users/a1101381/Develop/server/graalvm-ce-java17-21.3.0/Contents/Home'] // Sets the system properties to use for the native image builder
            // Advanced options
            //buildArgs.add('-H:Extra') // Passes '-H:Extra' to the native image builder options. This can be used to pass parameters which are not directly supported by this extension
            jvmArgs.add('-Xmx6g')

            // Runtime options
            //runtimeArgs.add('--help') // Passes '--help' to built image, during "nativeRun" task

            // Development options
            agent {
                enabled = true // Enables the reflection agent. Can be also set on command line using '-Pagent'
            }

            useFatJar = true // Instead of passing each jar individually, builds a fat jar
        }
    }
}

nativeBuild {
    imageName = "LargeXmlNaverEpReaderMain"
    mainClass = "utils.big.LargeXmlNaverEpReaderMain"
    verbose = true
    fallback = false
}

test {
    useJUnitPlatform()
}